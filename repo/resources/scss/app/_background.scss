@use "sass:map";
@use "reboot";

// >>-- 24 Background css start --<<

// background-color css starts

@mixin bg-colors($name, $stylename,$color,$max, $offset) {
    $i: .10;
    @while $i <= $max {
      .bg-#{$name}-#{$i*1000} {
        #{$stylename}: rgba(#{$color},#{$i}) !important;
        color: rgba(var(--white),1);
        &:hover,&:active ,&.active ,&.show,&:checked,&:focus {
            color: rgba(var(--white),1);
            transition: var(--app-transition);
          }
      }

      $i: $i + $offset;
    }
  }

@mixin text-colors($name, $color, $max, $offset) {
  $i: .30;
  @while $i <= $max {
    .text-#{$name}-#{$i*1000} {
      color: rgba($color, $i) !important;
      &:hover, &:active, &.active, &.show, &:checked, &:focus {
        transition: var(--app-transition);
      }
    }
    $i: $i + $offset;
  }
}

  @each $name, $color in reboot.$colors {
    @include bg-colors(""+$name, 'background-color',map.get(reboot.$colors, $name),.90,.10);
    @include text-colors(""+$name, map.get(reboot.$colors, $name), .90, .10);
  }

.alert-outline-light,
.alert-light-border-light,
.alert-light-light,
.alert-light,
.text-bg-light,
.btn-light,
.btn-outline-light,
.btn-light-light,
.bg-light,
.box-shadow-light{
  color: rgba(var(--dark),1) !important;
}


.btn-white,
.bg-white{
  color: rgba(var(--dark),1) !important;
}
  // >>-- 24 Background css end --<<

